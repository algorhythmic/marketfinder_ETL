[tool.poetry]
name = "marketfinder-etl"
version = "0.1.0"
description = "Modern Python data engineering pipeline for prediction market arbitrage detection"
authors = ["MarketFinder Team <team@marketfinder.dev>"]
readme = "README.md"
packages = [{include = "marketfinder_etl", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
# Data Processing
polars = "^0.20.0"
pydantic = "^2.5.0"
duckdb = "^0.10.0"
# Async HTTP
httpx = "^0.26.0"
aiohttp = "^3.9.0"
# Orchestration
apache-airflow = "^2.8.0"
# ML and Analytics
scikit-learn = "^1.4.0"
numpy = "^1.26.0"
# LLM Integration
openai = "^1.10.0"
google-cloud-aiplatform = "^1.40.0"
# Caching and Storage
redis = "^5.0.0"
# Configuration and Environment
pydantic-settings = "^2.1.0"
python-dotenv = "^1.0.0"
# Logging and Monitoring
structlog = "^23.2.0"
prometheus-client = "^0.19.0"
# Utilities
rich = "^13.7.0"
typer = "^0.9.0"

[tool.poetry.group.dev.dependencies]
# Testing
pytest = "^7.4.0"
pytest-asyncio = "^0.23.0"
pytest-cov = "^4.1.0"
# Code Quality
black = "^23.12.0"
ruff = "^0.1.9"
mypy = "^1.8.0"
# Development Tools
ipython = "^8.18.0"
jupyter = "^1.0.0"
pre-commit = "^3.6.0"

[tool.poetry.scripts]
marketfinder = "marketfinder_etl.cli:app"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
pythonpath = [
    "src",
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]