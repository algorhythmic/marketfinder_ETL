version: '3.8'

services:
  # Redis for caching and task queuing
  redis:
    image: redis:7-alpine
    container_name: marketfinder-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL for Airflow metadata
  postgres:
    image: postgres:15-alpine
    container_name: marketfinder-postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MarketFinder ETL Application
  marketfinder-etl:
    build:
      context: .
      target: development
    container_name: marketfinder-etl
    ports:
      - "8000:8000"  # API server
      - "9090:9090"  # Prometheus metrics
    volumes:
      - ./src:/app/src
      - ./data:/app/data
      - ./logs:/app/logs
      - ./models:/app/models
      - ./.env:/app/.env
    environment:
      - REDIS_HOST=redis
      - DATABASE_URL=postgresql://airflow:airflow@postgres:5432/airflow
      - DUCKDB_PATH=/app/data/unified_markets.db
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    command: >
      sh -c "python -m marketfinder_etl.cli setup &&
             uvicorn marketfinder_etl.api.main:app --host 0.0.0.0 --port 8000 --reload"

  # Airflow Webserver
  airflow-webserver:
    build:
      context: .
      target: development
    container_name: marketfinder-airflow-webserver
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./.env:/app/.env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__API__AUTH_BACKENDS=airflow.api.auth.backend.basic_auth
      - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=true
      - REDIS_HOST=redis
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "airflow db init &&
             airflow users create \
               --username admin \
               --firstname Admin \
               --lastname User \
               --role Admin \
               --email admin@marketfinder.dev \
               --password admin &&
             airflow webserver --port 8080"

  # Airflow Scheduler
  airflow-scheduler:
    build:
      context: .
      target: development
    container_name: marketfinder-airflow-scheduler
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./.env:/app/.env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - REDIS_HOST=redis
    depends_on:
      airflow-webserver:
        condition: service_started
    command: airflow scheduler

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: marketfinder-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: marketfinder-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus

volumes:
  redis_data:
  postgres_data:
  prometheus_data:
  grafana_data: